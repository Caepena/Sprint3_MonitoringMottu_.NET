// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoringMottu.Infrastructure.Context;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MonitoringMottu.Infrastructure.Migrations
{
    [DbContext(typeof(MonitoringMottuContext))]
    [Migration("20251001174903_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonitoringMottu.Domain.Entities.Garagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<int>("Capacidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CAPACIDADE");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("RESPONSAVEL");

                    b.HasKey("Id");

                    b.ToTable("GARAGEM", (string)null);
                });

            modelBuilder.Entity("MonitoringMottu.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("COR");

                    b.Property<Guid>("Garagemid")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("IdGaragem");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("MARCA");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)")
                        .HasColumnName("PLACA");

                    b.Property<string>("StatusMoto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("Garagemid");

                    b.ToTable("Moto", (string)null);
                });

            modelBuilder.Entity("MonitoringMottu.Domain.Entities.Moto", b =>
                {
                    b.HasOne("MonitoringMottu.Domain.Entities.Garagem", "Garagem")
                        .WithMany("Motos")
                        .HasForeignKey("Garagemid")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Garagem");
                });

            modelBuilder.Entity("MonitoringMottu.Domain.Entities.Garagem", b =>
                {
                    b.Navigation("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
